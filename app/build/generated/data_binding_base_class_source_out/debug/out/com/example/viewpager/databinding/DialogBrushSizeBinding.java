// Generated by view binder compiler. Do not edit!
package com.example.viewpager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.viewpager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogBrushSizeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final SeekBar brushSize;

  @NonNull
  public final Button cancelBrushSize;

  @NonNull
  public final Button okBrushSize;

  @NonNull
  public final TextView showBrushSize;

  @NonNull
  public final TextView tileDialogBrushSize;

  private DialogBrushSizeBinding(@NonNull RelativeLayout rootView, @NonNull SeekBar brushSize,
      @NonNull Button cancelBrushSize, @NonNull Button okBrushSize, @NonNull TextView showBrushSize,
      @NonNull TextView tileDialogBrushSize) {
    this.rootView = rootView;
    this.brushSize = brushSize;
    this.cancelBrushSize = cancelBrushSize;
    this.okBrushSize = okBrushSize;
    this.showBrushSize = showBrushSize;
    this.tileDialogBrushSize = tileDialogBrushSize;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogBrushSizeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogBrushSizeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_brush_size, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogBrushSizeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.brush_size;
      SeekBar brushSize = ViewBindings.findChildViewById(rootView, id);
      if (brushSize == null) {
        break missingId;
      }

      id = R.id.cancel_brush_size;
      Button cancelBrushSize = ViewBindings.findChildViewById(rootView, id);
      if (cancelBrushSize == null) {
        break missingId;
      }

      id = R.id.ok_brush_size;
      Button okBrushSize = ViewBindings.findChildViewById(rootView, id);
      if (okBrushSize == null) {
        break missingId;
      }

      id = R.id.show_brush_size;
      TextView showBrushSize = ViewBindings.findChildViewById(rootView, id);
      if (showBrushSize == null) {
        break missingId;
      }

      id = R.id.tile_dialog_brush_size;
      TextView tileDialogBrushSize = ViewBindings.findChildViewById(rootView, id);
      if (tileDialogBrushSize == null) {
        break missingId;
      }

      return new DialogBrushSizeBinding((RelativeLayout) rootView, brushSize, cancelBrushSize,
          okBrushSize, showBrushSize, tileDialogBrushSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
