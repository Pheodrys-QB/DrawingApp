// Generated by view binder compiler. Do not edit!
package com.example.viewpager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.viewpager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DrawingViewBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button colorButton;

  @NonNull
  public final Button dowloadImg;

  @NonNull
  public final ViewDisplayBinding drawView;

  @NonNull
  public final Button eraser;

  @NonNull
  public final Button eyedropper;

  @NonNull
  public final LinearLayout motionLayer;

  @NonNull
  public final Button newPaint;

  @NonNull
  public final Button pencil;

  @NonNull
  public final Button save;

  @NonNull
  public final RelativeLayout toolDesign;

  @NonNull
  public final Button zoomImg;

  private DrawingViewBinding(@NonNull FrameLayout rootView, @NonNull Button colorButton,
      @NonNull Button dowloadImg, @NonNull ViewDisplayBinding drawView, @NonNull Button eraser,
      @NonNull Button eyedropper, @NonNull LinearLayout motionLayer, @NonNull Button newPaint,
      @NonNull Button pencil, @NonNull Button save, @NonNull RelativeLayout toolDesign,
      @NonNull Button zoomImg) {
    this.rootView = rootView;
    this.colorButton = colorButton;
    this.dowloadImg = dowloadImg;
    this.drawView = drawView;
    this.eraser = eraser;
    this.eyedropper = eyedropper;
    this.motionLayer = motionLayer;
    this.newPaint = newPaint;
    this.pencil = pencil;
    this.save = save;
    this.toolDesign = toolDesign;
    this.zoomImg = zoomImg;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DrawingViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DrawingViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.drawing_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DrawingViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.color_button;
      Button colorButton = ViewBindings.findChildViewById(rootView, id);
      if (colorButton == null) {
        break missingId;
      }

      id = R.id.dowloadImg;
      Button dowloadImg = ViewBindings.findChildViewById(rootView, id);
      if (dowloadImg == null) {
        break missingId;
      }

      id = R.id.drawView;
      View drawView = ViewBindings.findChildViewById(rootView, id);
      if (drawView == null) {
        break missingId;
      }
      ViewDisplayBinding binding_drawView = ViewDisplayBinding.bind(drawView);

      id = R.id.eraser;
      Button eraser = ViewBindings.findChildViewById(rootView, id);
      if (eraser == null) {
        break missingId;
      }

      id = R.id.eyedropper;
      Button eyedropper = ViewBindings.findChildViewById(rootView, id);
      if (eyedropper == null) {
        break missingId;
      }

      id = R.id.motionLayer;
      LinearLayout motionLayer = ViewBindings.findChildViewById(rootView, id);
      if (motionLayer == null) {
        break missingId;
      }

      id = R.id.newPaint;
      Button newPaint = ViewBindings.findChildViewById(rootView, id);
      if (newPaint == null) {
        break missingId;
      }

      id = R.id.pencil;
      Button pencil = ViewBindings.findChildViewById(rootView, id);
      if (pencil == null) {
        break missingId;
      }

      id = R.id.save;
      Button save = ViewBindings.findChildViewById(rootView, id);
      if (save == null) {
        break missingId;
      }

      id = R.id.tool_design;
      RelativeLayout toolDesign = ViewBindings.findChildViewById(rootView, id);
      if (toolDesign == null) {
        break missingId;
      }

      id = R.id.zoomImg;
      Button zoomImg = ViewBindings.findChildViewById(rootView, id);
      if (zoomImg == null) {
        break missingId;
      }

      return new DrawingViewBinding((FrameLayout) rootView, colorButton, dowloadImg,
          binding_drawView, eraser, eyedropper, motionLayer, newPaint, pencil, save, toolDesign,
          zoomImg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
